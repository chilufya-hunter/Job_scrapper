{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Job_scrapper\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport JobList from './components/JobList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchJobs = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://localhost:5000/api/jobs');\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zambia Job Scraper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchJobs,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Find Jobs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobList, {\n      jobs: jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OAi6o1/MygvN4BDSBjTsxHt/EVA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","JobList","jsxDEV","_jsxDEV","App","_s","jobs","setJobs","loading","setLoading","fetchJobs","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Projects/Job_scrapper/Frontend/src/App.js"],"sourcesContent":["\r\n// src/App.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport JobList from './components/JobList';\r\n\r\nfunction App() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchJobs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/jobs');\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching jobs:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Zambia Job Scraper</h1>\r\n      <button onClick={fetchJobs} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Find Jobs'}\r\n      </button>\r\n      <JobList jobs={jobs} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;MAClEL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IACAL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAQmB,OAAO,EAAEZ,SAAU;MAACa,QAAQ,EAAEf,OAAQ;MAAAS,QAAA,EAC3CT,OAAO,GAAG,YAAY,GAAG;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACTlB,OAAA,CAACF,OAAO;MAACK,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAAChB,EAAA,CAxBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}